openapi: 3.0.3
info:
  title: 'Tickets API Documentation'
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://tickets.test'
tags:
  -
    name: Authentication
    description: ''
  -
    name: Endpoints
    description: ''
  -
    name: 'Managing Tickets'
    description: ''
  -
    name: 'Managing Tickets by Author'
    description: ''
  -
    name: 'Managing Users'
    description: ''
  -
    name: 'Showing Authors'
    description: ''
components:
  securitySchemes:
    default:
      type: http
      scheme: bearer
      description: 'You can retrieve your token by visiting your dashboard and clicking <b>Generate API token</b>.'
security:
  -
    default: []
paths:
  /api/login:
    post:
      summary: Login
      operationId: login
      description: "Authenticates the user and returns the user's API token."
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    token: '{YOUR_AUTH_KEY}'
                  message: Authenticated
                  status: 200
                properties:
                  data:
                    type: object
                    properties:
                      token:
                        type: string
                        example: '{YOUR_AUTH_KEY}'
                  message:
                    type: string
                    example: Authenticated
                  status:
                    type: integer
                    example: 200
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: gbailey@example.net
                  nullable: false
                password:
                  type: string
                  description: 'Must be at least 8 characters.'
                  example: '+-0pBNvYgxwmi/#iw'
                  nullable: false
              required:
                - email
                - password
      security: []
  /api/logout:
    post:
      summary: Logout
      operationId: logout
      description: "Signs out the user and destroy's the API token."
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example: {  }
                properties: {  }
      tags:
        - Authentication
  /api/user:
    get:
      summary: ''
      operationId: getApiUser
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    type: user
                    id: 21
                    attributes:
                      name: 'Test User'
                      email: test@example.com
                      isManager: null
                    links:
                      self: 'http://tickets.test/api/v1/authors/21'
                properties:
                  data:
                    type: object
                    properties:
                      type:
                        type: string
                        example: user
                      id:
                        type: integer
                        example: 21
                      attributes:
                        type: object
                        properties:
                          name:
                            type: string
                            example: 'Test User'
                          email:
                            type: string
                            example: test@example.com
                          isManager:
                            type: string
                            example: null
                      links:
                        type: object
                        properties:
                          self:
                            type: string
                            example: 'http://tickets.test/api/v1/authors/21'
      tags:
        - Endpoints
  /api/v1/user:
    get:
      summary: ''
      operationId: getApiV1User
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    type: rror
                    status: 0
                    message: 'Call to undefined method Illuminate\Support\Facades\Request::user()'
                    source: 'Line: 24: /Users/najibu/Herd/tickets/routes/api_v1.php'
      tags:
        - Endpoints
  /api/v1/tickets:
    get:
      summary: 'Get all tickets'
      operationId: getAllTickets
      description: ''
      parameters:
        -
          in: query
          name: sort
          description: 'Data field(s) to sort by. Separate multiple fields with commas. Denote descending sort with a minus sign.'
          example: 'sort=title,-createdAt'
          required: false
          schema:
            type: string
            description: 'Data field(s) to sort by. Separate multiple fields with commas. Denote descending sort with a minus sign.'
            example: 'sort=title,-createdAt'
            nullable: false
        -
          in: query
          name: 'filter[status]'
          description: 'Filter by status code: A, C, H, X.'
          example: null
          required: false
          schema:
            type: string
            description: 'Filter by status code: A, C, H, X.'
            example: null
            nullable: false
        -
          in: query
          name: 'filter[title]'
          description: 'Filter by title. Wildcards are supported.'
          example: '*fix*'
          required: false
          schema:
            type: string
            description: 'Filter by title. Wildcards are supported.'
            example: '*fix*'
            nullable: false
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      type: ticket
                      id: 103
                      attributes:
                        title: 'fourth Ticket'
                        status: closed
                        createdAt: '2024-12-14T18:00:29.000000Z'
                        updatedAt: '2024-12-14T18:00:29.000000Z'
                      relationships:
                        author:
                          data:
                            type: user
                            id: 1
                          links:
                            -
                              self: 'http://tickets.test/api/v1/authors/1'
                      links:
                        self: 'http://tickets.test/api/v1/tickets/103'
                    -
                      type: ticket
                      id: 102
                      attributes:
                        title: 'First Ticket'
                        status: closed
                        createdAt: '2024-12-14T17:57:37.000000Z'
                        updatedAt: '2024-12-14T17:57:37.000000Z'
                      relationships:
                        author:
                          data:
                            type: user
                            id: 1
                          links:
                            -
                              self: 'http://tickets.test/api/v1/authors/1'
                      links:
                        self: 'http://tickets.test/api/v1/tickets/102'
                    -
                      type: ticket
                      id: 101
                      attributes:
                        title: 'First Ticket'
                        status: open
                        createdAt: '2024-12-14T17:47:55.000000Z'
                        updatedAt: '2024-12-14T17:47:55.000000Z'
                      relationships:
                        author:
                          data:
                            type: user
                            id: 1
                          links:
                            -
                              self: 'http://tickets.test/api/v1/authors/1'
                      links:
                        self: 'http://tickets.test/api/v1/tickets/101'
                    -
                      type: ticket
                      id: 1
                      attributes:
                        title: 'Doloribus officiis et facere.'
                        status: closed
                        createdAt: '2024-07-24T15:25:42.000000Z'
                        updatedAt: '2024-07-24T15:25:42.000000Z'
                      relationships:
                        author:
                          data:
                            type: user
                            id: 11
                          links:
                            -
                              self: 'http://tickets.test/api/v1/authors/11'
                      links:
                        self: 'http://tickets.test/api/v1/tickets/1'
                    -
                      type: ticket
                      id: 2
                      attributes:
                        title: 'Eum laborum totam eius officiis qui.'
                        status: closed
                        createdAt: '2024-07-24T15:25:42.000000Z'
                        updatedAt: '2024-07-24T15:25:42.000000Z'
                      relationships:
                        author:
                          data:
                            type: user
                            id: 19
                          links:
                            -
                              self: 'http://tickets.test/api/v1/authors/19'
                      links:
                        self: 'http://tickets.test/api/v1/tickets/2'
                    -
                      type: ticket
                      id: 3
                      attributes:
                        title: 'Blanditiis laborum quis dolores veritatis iure atque voluptatem.'
                        status: open
                        createdAt: '2024-07-24T15:25:42.000000Z'
                        updatedAt: '2024-07-24T15:25:42.000000Z'
                      relationships:
                        author:
                          data:
                            type: user
                            id: 13
                          links:
                            -
                              self: 'http://tickets.test/api/v1/authors/13'
                      links:
                        self: 'http://tickets.test/api/v1/tickets/3'
                    -
                      type: ticket
                      id: 4
                      attributes:
                        title: 'Voluptas alias voluptates sit porro.'
                        status: closed
                        createdAt: '2024-07-24T15:25:42.000000Z'
                        updatedAt: '2024-07-24T15:25:42.000000Z'
                      relationships:
                        author:
                          data:
                            type: user
                            id: 13
                          links:
                            -
                              self: 'http://tickets.test/api/v1/authors/13'
                      links:
                        self: 'http://tickets.test/api/v1/tickets/4'
                    -
                      type: ticket
                      id: 5
                      attributes:
                        title: 'Cum non similique vitae omnis.'
                        status: open
                        createdAt: '2024-07-24T15:25:42.000000Z'
                        updatedAt: '2024-07-24T15:25:42.000000Z'
                      relationships:
                        author:
                          data:
                            type: user
                            id: 17
                          links:
                            -
                              self: 'http://tickets.test/api/v1/authors/17'
                      links:
                        self: 'http://tickets.test/api/v1/tickets/5'
                    -
                      type: ticket
                      id: 6
                      attributes:
                        title: 'Eveniet suscipit molestias consequatur et quae.'
                        status: open
                        createdAt: '2024-07-24T15:25:42.000000Z'
                        updatedAt: '2024-07-24T15:25:42.000000Z'
                      relationships:
                        author:
                          data:
                            type: user
                            id: 11
                          links:
                            -
                              self: 'http://tickets.test/api/v1/authors/11'
                      links:
                        self: 'http://tickets.test/api/v1/tickets/6'
                    -
                      type: ticket
                      id: 7
                      attributes:
                        title: 'Sint sed recusandae accusantium dolores.'
                        status: open
                        createdAt: '2024-07-24T15:25:42.000000Z'
                        updatedAt: '2024-07-24T15:25:42.000000Z'
                      relationships:
                        author:
                          data:
                            type: user
                            id: 15
                          links:
                            -
                              self: 'http://tickets.test/api/v1/authors/15'
                      links:
                        self: 'http://tickets.test/api/v1/tickets/7'
                    -
                      type: ticket
                      id: 8
                      attributes:
                        title: 'Eius suscipit aspernatur voluptatibus id.'
                        status: pending
                        createdAt: '2024-07-24T15:25:42.000000Z'
                        updatedAt: '2024-07-24T15:25:42.000000Z'
                      relationships:
                        author:
                          data:
                            type: user
                            id: 16
                          links:
                            -
                              self: 'http://tickets.test/api/v1/authors/16'
                      links:
                        self: 'http://tickets.test/api/v1/tickets/8'
                    -
                      type: ticket
                      id: 9
                      attributes:
                        title: 'Delectus ut expedita harum voluptas voluptatem iste.'
                        status: pending
                        createdAt: '2024-07-24T15:25:42.000000Z'
                        updatedAt: '2024-07-24T15:25:42.000000Z'
                      relationships:
                        author:
                          data:
                            type: user
                            id: 14
                          links:
                            -
                              self: 'http://tickets.test/api/v1/authors/14'
                      links:
                        self: 'http://tickets.test/api/v1/tickets/9'
                    -
                      type: ticket
                      id: 10
                      attributes:
                        title: 'Et unde aperiam nisi ut consequatur.'
                        status: closed
                        createdAt: '2024-07-24T15:25:42.000000Z'
                        updatedAt: '2024-07-24T15:25:42.000000Z'
                      relationships:
                        author:
                          data:
                            type: user
                            id: 11
                          links:
                            -
                              self: 'http://tickets.test/api/v1/authors/11'
                      links:
                        self: 'http://tickets.test/api/v1/tickets/10'
                    -
                      type: ticket
                      id: 11
                      attributes:
                        title: 'Assumenda sint aliquam veniam aperiam ipsum consectetur.'
                        status: closed
                        createdAt: '2024-07-24T15:25:42.000000Z'
                        updatedAt: '2024-07-24T15:25:42.000000Z'
                      relationships:
                        author:
                          data:
                            type: user
                            id: 14
                          links:
                            -
                              self: 'http://tickets.test/api/v1/authors/14'
                      links:
                        self: 'http://tickets.test/api/v1/tickets/11'
                    -
                      type: ticket
                      id: 12
                      attributes:
                        title: 'Et earum illum debitis quisquam id.'
                        status: open
                        createdAt: '2024-07-24T15:25:42.000000Z'
                        updatedAt: '2024-07-24T15:25:42.000000Z'
                      relationships:
                        author:
                          data:
                            type: user
                            id: 12
                          links:
                            -
                              self: 'http://tickets.test/api/v1/authors/12'
                      links:
                        self: 'http://tickets.test/api/v1/tickets/12'
                  links:
                    first: 'http://tickets.test/api/v1/tickets?page=1'
                    last: 'http://tickets.test/api/v1/tickets?page=7'
                    prev: null
                    next: 'http://tickets.test/api/v1/tickets?page=2'
                  meta:
                    current_page: 1
                    from: 1
                    last_page: 7
                    links:
                      -
                        url: null
                        label: '&laquo; Previous'
                        active: false
                      -
                        url: 'http://tickets.test/api/v1/tickets?page=1'
                        label: '1'
                        active: true
                      -
                        url: 'http://tickets.test/api/v1/tickets?page=2'
                        label: '2'
                        active: false
                      -
                        url: 'http://tickets.test/api/v1/tickets?page=3'
                        label: '3'
                        active: false
                      -
                        url: 'http://tickets.test/api/v1/tickets?page=4'
                        label: '4'
                        active: false
                      -
                        url: 'http://tickets.test/api/v1/tickets?page=5'
                        label: '5'
                        active: false
                      -
                        url: 'http://tickets.test/api/v1/tickets?page=6'
                        label: '6'
                        active: false
                      -
                        url: 'http://tickets.test/api/v1/tickets?page=7'
                        label: '7'
                        active: false
                      -
                        url: 'http://tickets.test/api/v1/tickets?page=2'
                        label: 'Next &raquo;'
                        active: false
                    path: 'http://tickets.test/api/v1/tickets'
                    per_page: 15
                    to: 15
                    total: 102
                properties:
                  data:
                    type: array
                    example:
                      -
                        type: ticket
                        id: 103
                        attributes:
                          title: 'fourth Ticket'
                          status: closed
                          createdAt: '2024-12-14T18:00:29.000000Z'
                          updatedAt: '2024-12-14T18:00:29.000000Z'
                        relationships:
                          author:
                            data:
                              type: user
                              id: 1
                            links:
                              -
                                self: 'http://tickets.test/api/v1/authors/1'
                        links:
                          self: 'http://tickets.test/api/v1/tickets/103'
                      -
                        type: ticket
                        id: 102
                        attributes:
                          title: 'First Ticket'
                          status: closed
                          createdAt: '2024-12-14T17:57:37.000000Z'
                          updatedAt: '2024-12-14T17:57:37.000000Z'
                        relationships:
                          author:
                            data:
                              type: user
                              id: 1
                            links:
                              -
                                self: 'http://tickets.test/api/v1/authors/1'
                        links:
                          self: 'http://tickets.test/api/v1/tickets/102'
                      -
                        type: ticket
                        id: 101
                        attributes:
                          title: 'First Ticket'
                          status: open
                          createdAt: '2024-12-14T17:47:55.000000Z'
                          updatedAt: '2024-12-14T17:47:55.000000Z'
                        relationships:
                          author:
                            data:
                              type: user
                              id: 1
                            links:
                              -
                                self: 'http://tickets.test/api/v1/authors/1'
                        links:
                          self: 'http://tickets.test/api/v1/tickets/101'
                      -
                        type: ticket
                        id: 1
                        attributes:
                          title: 'Doloribus officiis et facere.'
                          status: closed
                          createdAt: '2024-07-24T15:25:42.000000Z'
                          updatedAt: '2024-07-24T15:25:42.000000Z'
                        relationships:
                          author:
                            data:
                              type: user
                              id: 11
                            links:
                              -
                                self: 'http://tickets.test/api/v1/authors/11'
                        links:
                          self: 'http://tickets.test/api/v1/tickets/1'
                      -
                        type: ticket
                        id: 2
                        attributes:
                          title: 'Eum laborum totam eius officiis qui.'
                          status: closed
                          createdAt: '2024-07-24T15:25:42.000000Z'
                          updatedAt: '2024-07-24T15:25:42.000000Z'
                        relationships:
                          author:
                            data:
                              type: user
                              id: 19
                            links:
                              -
                                self: 'http://tickets.test/api/v1/authors/19'
                        links:
                          self: 'http://tickets.test/api/v1/tickets/2'
                      -
                        type: ticket
                        id: 3
                        attributes:
                          title: 'Blanditiis laborum quis dolores veritatis iure atque voluptatem.'
                          status: open
                          createdAt: '2024-07-24T15:25:42.000000Z'
                          updatedAt: '2024-07-24T15:25:42.000000Z'
                        relationships:
                          author:
                            data:
                              type: user
                              id: 13
                            links:
                              -
                                self: 'http://tickets.test/api/v1/authors/13'
                        links:
                          self: 'http://tickets.test/api/v1/tickets/3'
                      -
                        type: ticket
                        id: 4
                        attributes:
                          title: 'Voluptas alias voluptates sit porro.'
                          status: closed
                          createdAt: '2024-07-24T15:25:42.000000Z'
                          updatedAt: '2024-07-24T15:25:42.000000Z'
                        relationships:
                          author:
                            data:
                              type: user
                              id: 13
                            links:
                              -
                                self: 'http://tickets.test/api/v1/authors/13'
                        links:
                          self: 'http://tickets.test/api/v1/tickets/4'
                      -
                        type: ticket
                        id: 5
                        attributes:
                          title: 'Cum non similique vitae omnis.'
                          status: open
                          createdAt: '2024-07-24T15:25:42.000000Z'
                          updatedAt: '2024-07-24T15:25:42.000000Z'
                        relationships:
                          author:
                            data:
                              type: user
                              id: 17
                            links:
                              -
                                self: 'http://tickets.test/api/v1/authors/17'
                        links:
                          self: 'http://tickets.test/api/v1/tickets/5'
                      -
                        type: ticket
                        id: 6
                        attributes:
                          title: 'Eveniet suscipit molestias consequatur et quae.'
                          status: open
                          createdAt: '2024-07-24T15:25:42.000000Z'
                          updatedAt: '2024-07-24T15:25:42.000000Z'
                        relationships:
                          author:
                            data:
                              type: user
                              id: 11
                            links:
                              -
                                self: 'http://tickets.test/api/v1/authors/11'
                        links:
                          self: 'http://tickets.test/api/v1/tickets/6'
                      -
                        type: ticket
                        id: 7
                        attributes:
                          title: 'Sint sed recusandae accusantium dolores.'
                          status: open
                          createdAt: '2024-07-24T15:25:42.000000Z'
                          updatedAt: '2024-07-24T15:25:42.000000Z'
                        relationships:
                          author:
                            data:
                              type: user
                              id: 15
                            links:
                              -
                                self: 'http://tickets.test/api/v1/authors/15'
                        links:
                          self: 'http://tickets.test/api/v1/tickets/7'
                      -
                        type: ticket
                        id: 8
                        attributes:
                          title: 'Eius suscipit aspernatur voluptatibus id.'
                          status: pending
                          createdAt: '2024-07-24T15:25:42.000000Z'
                          updatedAt: '2024-07-24T15:25:42.000000Z'
                        relationships:
                          author:
                            data:
                              type: user
                              id: 16
                            links:
                              -
                                self: 'http://tickets.test/api/v1/authors/16'
                        links:
                          self: 'http://tickets.test/api/v1/tickets/8'
                      -
                        type: ticket
                        id: 9
                        attributes:
                          title: 'Delectus ut expedita harum voluptas voluptatem iste.'
                          status: pending
                          createdAt: '2024-07-24T15:25:42.000000Z'
                          updatedAt: '2024-07-24T15:25:42.000000Z'
                        relationships:
                          author:
                            data:
                              type: user
                              id: 14
                            links:
                              -
                                self: 'http://tickets.test/api/v1/authors/14'
                        links:
                          self: 'http://tickets.test/api/v1/tickets/9'
                      -
                        type: ticket
                        id: 10
                        attributes:
                          title: 'Et unde aperiam nisi ut consequatur.'
                          status: closed
                          createdAt: '2024-07-24T15:25:42.000000Z'
                          updatedAt: '2024-07-24T15:25:42.000000Z'
                        relationships:
                          author:
                            data:
                              type: user
                              id: 11
                            links:
                              -
                                self: 'http://tickets.test/api/v1/authors/11'
                        links:
                          self: 'http://tickets.test/api/v1/tickets/10'
                      -
                        type: ticket
                        id: 11
                        attributes:
                          title: 'Assumenda sint aliquam veniam aperiam ipsum consectetur.'
                          status: closed
                          createdAt: '2024-07-24T15:25:42.000000Z'
                          updatedAt: '2024-07-24T15:25:42.000000Z'
                        relationships:
                          author:
                            data:
                              type: user
                              id: 14
                            links:
                              -
                                self: 'http://tickets.test/api/v1/authors/14'
                        links:
                          self: 'http://tickets.test/api/v1/tickets/11'
                      -
                        type: ticket
                        id: 12
                        attributes:
                          title: 'Et earum illum debitis quisquam id.'
                          status: open
                          createdAt: '2024-07-24T15:25:42.000000Z'
                          updatedAt: '2024-07-24T15:25:42.000000Z'
                        relationships:
                          author:
                            data:
                              type: user
                              id: 12
                            links:
                              -
                                self: 'http://tickets.test/api/v1/authors/12'
                        links:
                          self: 'http://tickets.test/api/v1/tickets/12'
                    items:
                      type: object
                      properties:
                        type:
                          type: string
                          example: ticket
                        id:
                          type: integer
                          example: 103
                        attributes:
                          type: object
                          properties:
                            title:
                              type: string
                              example: 'fourth Ticket'
                            status:
                              type: string
                              example: closed
                            createdAt:
                              type: string
                              example: '2024-12-14T18:00:29.000000Z'
                            updatedAt:
                              type: string
                              example: '2024-12-14T18:00:29.000000Z'
                        relationships:
                          type: object
                          properties:
                            author:
                              type: object
                              properties:
                                data:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      example: user
                                    id:
                                      type: integer
                                      example: 1
                                links:
                                  type: array
                                  example:
                                    -
                                      self: 'http://tickets.test/api/v1/authors/1'
                                  items:
                                    type: object
                                    properties:
                                      self: { type: string, example: 'http://tickets.test/api/v1/authors/1' }
                        links:
                          type: object
                          properties:
                            self:
                              type: string
                              example: 'http://tickets.test/api/v1/tickets/103'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                        example: 'http://tickets.test/api/v1/tickets?page=1'
                      last:
                        type: string
                        example: 'http://tickets.test/api/v1/tickets?page=7'
                      prev:
                        type: string
                        example: null
                      next:
                        type: string
                        example: 'http://tickets.test/api/v1/tickets?page=2'
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      from:
                        type: integer
                        example: 1
                      last_page:
                        type: integer
                        example: 7
                      links:
                        type: array
                        example:
                          -
                            url: null
                            label: '&laquo; Previous'
                            active: false
                          -
                            url: 'http://tickets.test/api/v1/tickets?page=1'
                            label: '1'
                            active: true
                          -
                            url: 'http://tickets.test/api/v1/tickets?page=2'
                            label: '2'
                            active: false
                          -
                            url: 'http://tickets.test/api/v1/tickets?page=3'
                            label: '3'
                            active: false
                          -
                            url: 'http://tickets.test/api/v1/tickets?page=4'
                            label: '4'
                            active: false
                          -
                            url: 'http://tickets.test/api/v1/tickets?page=5'
                            label: '5'
                            active: false
                          -
                            url: 'http://tickets.test/api/v1/tickets?page=6'
                            label: '6'
                            active: false
                          -
                            url: 'http://tickets.test/api/v1/tickets?page=7'
                            label: '7'
                            active: false
                          -
                            url: 'http://tickets.test/api/v1/tickets?page=2'
                            label: 'Next &raquo;'
                            active: false
                        items:
                          type: object
                          properties:
                            url:
                              type: string
                              example: null
                            label:
                              type: string
                              example: '&laquo; Previous'
                            active:
                              type: boolean
                              example: false
                      path:
                        type: string
                        example: 'http://tickets.test/api/v1/tickets'
                      per_page:
                        type: integer
                        example: 15
                      to:
                        type: integer
                        example: 15
                      total:
                        type: integer
                        example: 102
      tags:
        - 'Managing Tickets'
    post:
      summary: 'Create a ticket'
      operationId: createATicket
      description: 'Creates a new ticket record. Users can only create tickets for themselves. Managers can create tickets for any user.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    type: ticket
                    id: 107
                    attributes:
                      title: asdfasdfasdfasdfasdfsadf
                      description: 'test ticket'
                      status: A
                      createdAt: '2024-03-26T04:40:48.000000Z'
                      updatedAt: '2024-03-26T04:40:48.000000Z'
                    relationships:
                      author:
                        data:
                          type: user
                          id: 1
                        links:
                          self: 'http://localhost:8000/api/v1/authors/1'
                    links:
                      self: 'http://localhost:8000/api/v1/tickets/107'
                properties:
                  data:
                    type: object
                    properties:
                      type:
                        type: string
                        example: ticket
                      id:
                        type: integer
                        example: 107
                      attributes:
                        type: object
                        properties:
                          title:
                            type: string
                            example: asdfasdfasdfasdfasdfsadf
                          description:
                            type: string
                            example: 'test ticket'
                          status:
                            type: string
                            example: A
                          createdAt:
                            type: string
                            example: '2024-03-26T04:40:48.000000Z'
                          updatedAt:
                            type: string
                            example: '2024-03-26T04:40:48.000000Z'
                      relationships:
                        type: object
                        properties:
                          author:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    example: user
                                  id:
                                    type: integer
                                    example: 1
                              links:
                                type: object
                                properties:
                                  self:
                                    type: string
                                    example: 'http://localhost:8000/api/v1/authors/1'
                      links:
                        type: object
                        properties:
                          self:
                            type: string
                            example: 'http://localhost:8000/api/v1/tickets/107'
      tags:
        - 'Managing Tickets'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties:
                    attributes:
                      type: object
                      description: ''
                      example: []
                      nullable: false
                      properties:
                        title:
                          type: string
                          description: "The ticket's title (method)."
                          example: No-example
                          nullable: false
                        description:
                          type: string
                          description: "The ticket's description."
                          example: No-example
                          nullable: false
                        status:
                          type: string
                          description: "The ticket's status."
                          example: No-example
                          nullable: false
                          enum:
                            - A
                            - C
                            - H
                            - X
                      required:
                        - title
                        - description
                        - status
                    relationships:
                      type: object
                      description: ''
                      example: []
                      nullable: false
                      properties:
                        author:
                          type: object
                          description: ''
                          example: []
                          nullable: false
                          properties:
                            data:
                              type: object
                              description: ''
                              example: []
                              nullable: false
                              properties:
                                id:
                                  type: integer
                                  description: 'The author assigned to the ticket. The <code>id</code> of an existing record in the users table.'
                                  example: 0
                                  nullable: false
                              required:
                                - id
                          required:
                            - data
                      required:
                        - author
                  required:
                    - attributes
                    - relationships
              required:
                - data
  '/api/v1/tickets/{id}':
    get:
      summary: 'Show a specific ticket.'
      operationId: showASpecificTicket
      description: 'Display an individual ticket.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    type: UrlGenerationException
                    status: 0
                    message: 'Missing required parameter for [Route: authors.show] [URI: api/v1/authors/{author}] [Missing parameter: author].'
                    source: 'Line: 35: /Users/najibu/Herd/tickets/vendor/laravel/framework/src/Illuminate/Routing/Exceptions/UrlGenerationException.php'
      tags:
        - 'Managing Tickets'
    delete:
      summary: 'Delete ticket.'
      operationId: deleteTicket
      description: 'Remove the specified resource from storage.'
      parameters: []
      responses: {  }
      tags:
        - 'Managing Tickets'
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the ticket.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/v1/tickets/{ticket_id}':
    put:
      summary: 'Replace Ticket'
      operationId: replaceTicket
      description: 'Replace the specified ticket in storage.'
      parameters: []
      responses: {  }
      tags:
        - 'Managing Tickets'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties:
                    attributes:
                      type: object
                      description: ''
                      example: []
                      nullable: false
                      properties:
                        title:
                          type: string
                          description: ''
                          example: architecto
                          nullable: false
                        description:
                          type: string
                          description: ''
                          example: 'Eius et animi quos velit et.'
                          nullable: false
                        status:
                          type: string
                          description: ''
                          example: closed
                          nullable: false
                          enum:
                            - open
                            - closed
                            - pending
                      required:
                        - title
                        - description
                        - status
                    relationships:
                      type: object
                      description: ''
                      example: []
                      nullable: false
                      properties:
                        author:
                          type: object
                          description: ''
                          example: []
                          nullable: false
                          properties:
                            data:
                              type: object
                              description: ''
                              example: []
                              nullable: false
                              properties:
                                id:
                                  type: integer
                                  description: ''
                                  example: 16
                                  nullable: false
                              required:
                                - id
                          required:
                            - data
                      required:
                        - author
                  required:
                    - attributes
                    - relationships
              required:
                - data
    patch:
      summary: 'Update Ticket'
      operationId: updateTicket
      description: 'Update the specified ticket in storage.'
      parameters: []
      responses: {  }
      tags:
        - 'Managing Tickets'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties:
                    attributes:
                      type: object
                      description: ''
                      example: []
                      nullable: false
                      properties:
                        title:
                          type: string
                          description: ''
                          example: architecto
                          nullable: false
                        description:
                          type: string
                          description: ''
                          example: 'Eius et animi quos velit et.'
                          nullable: false
                        status:
                          type: string
                          description: ''
                          example: pending
                          nullable: false
                          enum:
                            - open
                            - closed
                            - pending
                    relationships:
                      type: object
                      description: ''
                      example: []
                      nullable: false
                      properties:
                        author:
                          type: object
                          description: ''
                          example: []
                          nullable: false
                          properties:
                            data:
                              type: object
                              description: ''
                              example: []
                              nullable: false
                              properties:
                                id:
                                  type: string
                                  description: ''
                                  example: null
                                  nullable: false
    parameters:
      -
        in: path
        name: ticket_id
        description: 'The ID of the ticket.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/v1/authors/{author_id}/tickets':
    get:
      summary: 'Get all tickets'
      operationId: getAllTickets
      description: 'Retrieves all tickets created by a specific user.'
      parameters:
        -
          in: query
          name: sort
          description: 'Data field(s) to sort by. Separate multiple fields with commas. Denote descending sort with a minus sign.'
          example: sort=name
          required: false
          schema:
            type: string
            description: 'Data field(s) to sort by. Separate multiple fields with commas. Denote descending sort with a minus sign.'
            example: sort=name
            nullable: false
        -
          in: query
          name: 'filter[name]'
          description: 'Filter by name. Wildcards are supported.'
          example: architecto
          required: false
          schema:
            type: string
            description: 'Filter by name. Wildcards are supported.'
            example: architecto
            nullable: false
        -
          in: query
          name: 'filter[email]'
          description: 'Filter by email. Wildcards are supported.'
          example: architecto
          required: false
          schema:
            type: string
            description: 'Filter by email. Wildcards are supported.'
            example: architecto
            nullable: false
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      type: user
                      id: 3
                      attributes:
                        name: 'Mr. Henri Beatty MD'
                        email: bmertz@example.net
                        isManager: false
                        emailVerifiedAt: '2024-03-14T04:41:51.000000Z'
                        createdAt: '2024-03-14T04:41:51.000000Z'
                        udpatedAt: '2024-03-14T04:41:51.000000Z'
                      links:
                        self: 'http://localhost:8000/api/v1/authors/3'
                  links:
                    first: 'http://localhost:8000/api/v1/authors?page=1'
                    last: 'http://localhost:8000/api/v1/authors?page=1'
                    prev: null
                    next: null
                  meta:
                    current_page: 1
                    from: 1
                    last_page: 1
                    links:
                      -
                        url: null
                        label: '&laquo; Previous'
                        active: false
                      -
                        url: 'http://localhost:8000/api/v1/authors?page=1'
                        label: '1'
                        active: true
                      -
                        url: null
                        label: 'Next &raquo;'
                        active: false
                    path: 'http://localhost:8000/api/v1/authors'
                    per_page: 15
                    to: 1
                    total: 10
                properties:
                  data:
                    type: array
                    example:
                      -
                        type: user
                        id: 3
                        attributes:
                          name: 'Mr. Henri Beatty MD'
                          email: bmertz@example.net
                          isManager: false
                          emailVerifiedAt: '2024-03-14T04:41:51.000000Z'
                          createdAt: '2024-03-14T04:41:51.000000Z'
                          udpatedAt: '2024-03-14T04:41:51.000000Z'
                        links:
                          self: 'http://localhost:8000/api/v1/authors/3'
                    items:
                      type: object
                      properties:
                        type:
                          type: string
                          example: user
                        id:
                          type: integer
                          example: 3
                        attributes:
                          type: object
                          properties:
                            name:
                              type: string
                              example: 'Mr. Henri Beatty MD'
                            email:
                              type: string
                              example: bmertz@example.net
                            isManager:
                              type: boolean
                              example: false
                            emailVerifiedAt:
                              type: string
                              example: '2024-03-14T04:41:51.000000Z'
                            createdAt:
                              type: string
                              example: '2024-03-14T04:41:51.000000Z'
                            udpatedAt:
                              type: string
                              example: '2024-03-14T04:41:51.000000Z'
                        links:
                          type: object
                          properties:
                            self:
                              type: string
                              example: 'http://localhost:8000/api/v1/authors/3'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                        example: 'http://localhost:8000/api/v1/authors?page=1'
                      last:
                        type: string
                        example: 'http://localhost:8000/api/v1/authors?page=1'
                      prev:
                        type: string
                        example: null
                      next:
                        type: string
                        example: null
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      from:
                        type: integer
                        example: 1
                      last_page:
                        type: integer
                        example: 1
                      links:
                        type: array
                        example:
                          -
                            url: null
                            label: '&laquo; Previous'
                            active: false
                          -
                            url: 'http://localhost:8000/api/v1/authors?page=1'
                            label: '1'
                            active: true
                          -
                            url: null
                            label: 'Next &raquo;'
                            active: false
                        items:
                          type: object
                          properties:
                            url:
                              type: string
                              example: null
                            label:
                              type: string
                              example: '&laquo; Previous'
                            active:
                              type: boolean
                              example: false
                      path:
                        type: string
                        example: 'http://localhost:8000/api/v1/authors'
                      per_page:
                        type: integer
                        example: 15
                      to:
                        type: integer
                        example: 1
                      total:
                        type: integer
                        example: 10
      tags:
        - 'Managing Tickets by Author'
    post:
      summary: 'Create a ticket'
      operationId: createATicket
      description: 'Creates a ticket for the specific user.'
      parameters: []
      responses: {  }
      tags:
        - 'Managing Tickets by Author'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties:
                    attributes:
                      type: object
                      description: ''
                      example: []
                      nullable: false
                      properties:
                        title:
                          type: string
                          description: "The ticket's title (method)."
                          example: No-example
                          nullable: false
                        description:
                          type: string
                          description: "The ticket's description."
                          example: No-example
                          nullable: false
                        status:
                          type: string
                          description: "The ticket's status."
                          example: No-example
                          nullable: false
                          enum:
                            - A
                            - C
                            - H
                            - X
                      required:
                        - title
                        - description
                        - status
                  required:
                    - attributes
                author:
                  type: integer
                  description: 'The author assigned to the ticket. The <code>id</code> of an existing record in the users table.'
                  example: 0
                  nullable: false
              required:
                - data
                - author
    parameters:
      -
        in: path
        name: author_id
        description: "The author's ID."
        example: null
        required: true
        schema:
          type: integer
  '/api/v1/authors/{author_id}/tickets/{id}':
    delete:
      summary: "Delete an author's ticket"
      operationId: deleteAnAuthorsTicket
      description: "Deletes an author's ticket."
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example: {  }
                properties: {  }
      tags:
        - 'Managing Tickets by Author'
    parameters:
      -
        in: path
        name: author_id
        description: "The author's ID."
        example: null
        required: true
        schema:
          type: integer
      -
        in: path
        name: id
        description: 'The ticket ID.'
        example: null
        required: true
        schema:
          type: integer
  '/api/v1/authors/{author_id}/tickets/{ticket_id}':
    put:
      summary: "Replace an author's ticket"
      operationId: replaceAnAuthorsTicket
      description: "Replaces an author's ticket."
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    type: ticket
                    id: 107
                    attributes:
                      title: asdfasdfasdfasdfasdfsadf
                      description: 'test ticket'
                      status: A
                      createdAt: '2024-03-26T04:40:48.000000Z'
                      updatedAt: '2024-03-26T04:40:48.000000Z'
                    relationships:
                      author:
                        data:
                          type: user
                          id: 1
                        links:
                          self: 'http://localhost:8000/api/v1/authors/1'
                    links:
                      self: 'http://localhost:8000/api/v1/tickets/107'
                properties:
                  data:
                    type: object
                    properties:
                      type:
                        type: string
                        example: ticket
                      id:
                        type: integer
                        example: 107
                      attributes:
                        type: object
                        properties:
                          title:
                            type: string
                            example: asdfasdfasdfasdfasdfsadf
                          description:
                            type: string
                            example: 'test ticket'
                          status:
                            type: string
                            example: A
                          createdAt:
                            type: string
                            example: '2024-03-26T04:40:48.000000Z'
                          updatedAt:
                            type: string
                            example: '2024-03-26T04:40:48.000000Z'
                      relationships:
                        type: object
                        properties:
                          author:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    example: user
                                  id:
                                    type: integer
                                    example: 1
                              links:
                                type: object
                                properties:
                                  self:
                                    type: string
                                    example: 'http://localhost:8000/api/v1/authors/1'
                      links:
                        type: object
                        properties:
                          self:
                            type: string
                            example: 'http://localhost:8000/api/v1/tickets/107'
      tags:
        - 'Managing Tickets by Author'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties:
                    attributes:
                      type: object
                      description: ''
                      example: []
                      nullable: false
                      properties:
                        title:
                          type: string
                          description: ''
                          example: architecto
                          nullable: false
                        description:
                          type: string
                          description: ''
                          example: 'Eius et animi quos velit et.'
                          nullable: false
                        status:
                          type: string
                          description: ''
                          example: pending
                          nullable: false
                          enum:
                            - open
                            - closed
                            - pending
                      required:
                        - title
                        - description
                        - status
                    relationships:
                      type: object
                      description: ''
                      example: []
                      nullable: false
                      properties:
                        author:
                          type: object
                          description: ''
                          example: []
                          nullable: false
                          properties:
                            data:
                              type: object
                              description: ''
                              example: []
                              nullable: false
                              properties:
                                id:
                                  type: integer
                                  description: ''
                                  example: 16
                                  nullable: false
                              required:
                                - id
                          required:
                            - data
                      required:
                        - author
                  required:
                    - attributes
                    - relationships
              required:
                - data
    patch:
      summary: "Update an author's ticket"
      operationId: updateAnAuthorsTicket
      description: "Updates an author's ticket."
      parameters: []
      responses: {  }
      tags:
        - 'Managing Tickets by Author'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties:
                    attributes:
                      type: object
                      description: ''
                      example: []
                      nullable: false
                      properties:
                        title:
                          type: string
                          description: ''
                          example: architecto
                          nullable: false
                        description:
                          type: string
                          description: ''
                          example: 'Eius et animi quos velit et.'
                          nullable: false
                        status:
                          type: string
                          description: ''
                          example: open
                          nullable: false
                          enum:
                            - open
                            - closed
                            - pending
                    relationships:
                      type: object
                      description: ''
                      example: []
                      nullable: false
                      properties:
                        author:
                          type: object
                          description: ''
                          example: []
                          nullable: false
                          properties:
                            data:
                              type: object
                              description: ''
                              example: []
                              nullable: false
                              properties:
                                id:
                                  type: string
                                  description: ''
                                  example: null
                                  nullable: false
    parameters:
      -
        in: path
        name: author_id
        description: "The author's ID."
        example: null
        required: true
        schema:
          type: integer
      -
        in: path
        name: ticket_id
        description: 'The ticket ID.'
        example: null
        required: true
        schema:
          type: integer
  /api/v1/users:
    get:
      summary: 'Get all users'
      operationId: getAllUsers
      description: ''
      parameters:
        -
          in: query
          name: sort
          description: 'Data field(s) to sort by. Separate multiple fields with commas. Denote descending sort with a minus sign.'
          example: sort=name
          required: false
          schema:
            type: string
            description: 'Data field(s) to sort by. Separate multiple fields with commas. Denote descending sort with a minus sign.'
            example: sort=name
            nullable: false
        -
          in: query
          name: 'filter[name]'
          description: 'Filter by status name. Wildcards are supported.'
          example: null
          required: false
          schema:
            type: string
            description: 'Filter by status name. Wildcards are supported.'
            example: null
            nullable: false
        -
          in: query
          name: 'filter[email]'
          description: 'Filter by email. Wildcards are supported.'
          example: null
          required: false
          schema:
            type: string
            description: 'Filter by email. Wildcards are supported.'
            example: null
            nullable: false
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      type: user
                      id: 1
                      attributes:
                        name: 'Tremayne Green'
                        email: althea.gaylord@example.org
                        isManager: null
                      links:
                        self: 'http://tickets.test/api/v1/authors/1'
                    -
                      type: user
                      id: 2
                      attributes:
                        name: 'Turner King'
                        email: reynolds.stan@example.net
                        isManager: null
                      links:
                        self: 'http://tickets.test/api/v1/authors/2'
                    -
                      type: user
                      id: 3
                      attributes:
                        name: 'Erwin Schimmel'
                        email: dulce78@example.org
                        isManager: null
                      links:
                        self: 'http://tickets.test/api/v1/authors/3'
                    -
                      type: user
                      id: 4
                      attributes:
                        name: 'Sierra Huel I'
                        email: lurline94@example.net
                        isManager: null
                      links:
                        self: 'http://tickets.test/api/v1/authors/4'
                    -
                      type: user
                      id: 5
                      attributes:
                        name: 'Prof. Greyson Hills'
                        email: tromp.wava@example.net
                        isManager: null
                      links:
                        self: 'http://tickets.test/api/v1/authors/5'
                    -
                      type: user
                      id: 6
                      attributes:
                        name: 'Mr. Dante Runolfsdottir DDS'
                        email: daisy51@example.net
                        isManager: null
                      links:
                        self: 'http://tickets.test/api/v1/authors/6'
                    -
                      type: user
                      id: 7
                      attributes:
                        name: 'Mrs. Melyna Dibbert DVM'
                        email: auer.deshaun@example.com
                        isManager: null
                      links:
                        self: 'http://tickets.test/api/v1/authors/7'
                    -
                      type: user
                      id: 8
                      attributes:
                        name: 'Hellen Witting'
                        email: colby.kessler@example.com
                        isManager: null
                      links:
                        self: 'http://tickets.test/api/v1/authors/8'
                    -
                      type: user
                      id: 9
                      attributes:
                        name: 'Daisy Dietrich MD'
                        email: zbechtelar@example.net
                        isManager: null
                      links:
                        self: 'http://tickets.test/api/v1/authors/9'
                    -
                      type: user
                      id: 10
                      attributes:
                        name: 'Hudson West'
                        email: kristopher24@example.com
                        isManager: null
                      links:
                        self: 'http://tickets.test/api/v1/authors/10'
                    -
                      type: user
                      id: 11
                      attributes:
                        name: 'Bertha Blick'
                        email: mortimer.considine@example.org
                        isManager: null
                      links:
                        self: 'http://tickets.test/api/v1/authors/11'
                    -
                      type: user
                      id: 12
                      attributes:
                        name: 'Mrs. Roslyn Stanton V'
                        email: hbeer@example.net
                        isManager: null
                      links:
                        self: 'http://tickets.test/api/v1/authors/12'
                    -
                      type: user
                      id: 13
                      attributes:
                        name: 'Ms. Shakira Murazik'
                        email: isai86@example.net
                        isManager: null
                      links:
                        self: 'http://tickets.test/api/v1/authors/13'
                    -
                      type: user
                      id: 14
                      attributes:
                        name: 'Leta Schneider DDS'
                        email: hyatt.eldridge@example.org
                        isManager: null
                      links:
                        self: 'http://tickets.test/api/v1/authors/14'
                    -
                      type: user
                      id: 15
                      attributes:
                        name: 'Erwin Haag'
                        email: kozey.abagail@example.net
                        isManager: null
                      links:
                        self: 'http://tickets.test/api/v1/authors/15'
                  links:
                    first: 'http://tickets.test/api/v1/users?page=1'
                    last: 'http://tickets.test/api/v1/users?page=2'
                    prev: null
                    next: 'http://tickets.test/api/v1/users?page=2'
                  meta:
                    current_page: 1
                    from: 1
                    last_page: 2
                    links:
                      -
                        url: null
                        label: '&laquo; Previous'
                        active: false
                      -
                        url: 'http://tickets.test/api/v1/users?page=1'
                        label: '1'
                        active: true
                      -
                        url: 'http://tickets.test/api/v1/users?page=2'
                        label: '2'
                        active: false
                      -
                        url: 'http://tickets.test/api/v1/users?page=2'
                        label: 'Next &raquo;'
                        active: false
                    path: 'http://tickets.test/api/v1/users'
                    per_page: 15
                    to: 15
                    total: 21
                properties:
                  data:
                    type: array
                    example:
                      -
                        type: user
                        id: 1
                        attributes:
                          name: 'Tremayne Green'
                          email: althea.gaylord@example.org
                          isManager: null
                        links:
                          self: 'http://tickets.test/api/v1/authors/1'
                      -
                        type: user
                        id: 2
                        attributes:
                          name: 'Turner King'
                          email: reynolds.stan@example.net
                          isManager: null
                        links:
                          self: 'http://tickets.test/api/v1/authors/2'
                      -
                        type: user
                        id: 3
                        attributes:
                          name: 'Erwin Schimmel'
                          email: dulce78@example.org
                          isManager: null
                        links:
                          self: 'http://tickets.test/api/v1/authors/3'
                      -
                        type: user
                        id: 4
                        attributes:
                          name: 'Sierra Huel I'
                          email: lurline94@example.net
                          isManager: null
                        links:
                          self: 'http://tickets.test/api/v1/authors/4'
                      -
                        type: user
                        id: 5
                        attributes:
                          name: 'Prof. Greyson Hills'
                          email: tromp.wava@example.net
                          isManager: null
                        links:
                          self: 'http://tickets.test/api/v1/authors/5'
                      -
                        type: user
                        id: 6
                        attributes:
                          name: 'Mr. Dante Runolfsdottir DDS'
                          email: daisy51@example.net
                          isManager: null
                        links:
                          self: 'http://tickets.test/api/v1/authors/6'
                      -
                        type: user
                        id: 7
                        attributes:
                          name: 'Mrs. Melyna Dibbert DVM'
                          email: auer.deshaun@example.com
                          isManager: null
                        links:
                          self: 'http://tickets.test/api/v1/authors/7'
                      -
                        type: user
                        id: 8
                        attributes:
                          name: 'Hellen Witting'
                          email: colby.kessler@example.com
                          isManager: null
                        links:
                          self: 'http://tickets.test/api/v1/authors/8'
                      -
                        type: user
                        id: 9
                        attributes:
                          name: 'Daisy Dietrich MD'
                          email: zbechtelar@example.net
                          isManager: null
                        links:
                          self: 'http://tickets.test/api/v1/authors/9'
                      -
                        type: user
                        id: 10
                        attributes:
                          name: 'Hudson West'
                          email: kristopher24@example.com
                          isManager: null
                        links:
                          self: 'http://tickets.test/api/v1/authors/10'
                      -
                        type: user
                        id: 11
                        attributes:
                          name: 'Bertha Blick'
                          email: mortimer.considine@example.org
                          isManager: null
                        links:
                          self: 'http://tickets.test/api/v1/authors/11'
                      -
                        type: user
                        id: 12
                        attributes:
                          name: 'Mrs. Roslyn Stanton V'
                          email: hbeer@example.net
                          isManager: null
                        links:
                          self: 'http://tickets.test/api/v1/authors/12'
                      -
                        type: user
                        id: 13
                        attributes:
                          name: 'Ms. Shakira Murazik'
                          email: isai86@example.net
                          isManager: null
                        links:
                          self: 'http://tickets.test/api/v1/authors/13'
                      -
                        type: user
                        id: 14
                        attributes:
                          name: 'Leta Schneider DDS'
                          email: hyatt.eldridge@example.org
                          isManager: null
                        links:
                          self: 'http://tickets.test/api/v1/authors/14'
                      -
                        type: user
                        id: 15
                        attributes:
                          name: 'Erwin Haag'
                          email: kozey.abagail@example.net
                          isManager: null
                        links:
                          self: 'http://tickets.test/api/v1/authors/15'
                    items:
                      type: object
                      properties:
                        type:
                          type: string
                          example: user
                        id:
                          type: integer
                          example: 1
                        attributes:
                          type: object
                          properties:
                            name:
                              type: string
                              example: 'Tremayne Green'
                            email:
                              type: string
                              example: althea.gaylord@example.org
                            isManager:
                              type: string
                              example: null
                        links:
                          type: object
                          properties:
                            self:
                              type: string
                              example: 'http://tickets.test/api/v1/authors/1'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                        example: 'http://tickets.test/api/v1/users?page=1'
                      last:
                        type: string
                        example: 'http://tickets.test/api/v1/users?page=2'
                      prev:
                        type: string
                        example: null
                      next:
                        type: string
                        example: 'http://tickets.test/api/v1/users?page=2'
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      from:
                        type: integer
                        example: 1
                      last_page:
                        type: integer
                        example: 2
                      links:
                        type: array
                        example:
                          -
                            url: null
                            label: '&laquo; Previous'
                            active: false
                          -
                            url: 'http://tickets.test/api/v1/users?page=1'
                            label: '1'
                            active: true
                          -
                            url: 'http://tickets.test/api/v1/users?page=2'
                            label: '2'
                            active: false
                          -
                            url: 'http://tickets.test/api/v1/users?page=2'
                            label: 'Next &raquo;'
                            active: false
                        items:
                          type: object
                          properties:
                            url:
                              type: string
                              example: null
                            label:
                              type: string
                              example: '&laquo; Previous'
                            active:
                              type: boolean
                              example: false
                      path:
                        type: string
                        example: 'http://tickets.test/api/v1/users'
                      per_page:
                        type: integer
                        example: 15
                      to:
                        type: integer
                        example: 15
                      total:
                        type: integer
                        example: 21
      tags:
        - 'Managing Users'
    post:
      summary: 'Create a user'
      operationId: createAUser
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    type: user
                    id: 16
                    attributes:
                      name: 'My User'
                      email: user@user.com
                      isManager: false
                    links:
                      self: 'http://localhost:8000/api/v1/authors/16'
                properties:
                  data:
                    type: object
                    properties:
                      type:
                        type: string
                        example: user
                      id:
                        type: integer
                        example: 16
                      attributes:
                        type: object
                        properties:
                          name:
                            type: string
                            example: 'My User'
                          email:
                            type: string
                            example: user@user.com
                          isManager:
                            type: boolean
                            example: false
                      links:
                        type: object
                        properties:
                          self:
                            type: string
                            example: 'http://localhost:8000/api/v1/authors/16'
      tags:
        - 'Managing Users'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties:
                    attributes:
                      type: object
                      description: ''
                      example: []
                      nullable: false
                      properties:
                        name:
                          type: string
                          description: ''
                          example: architecto
                          nullable: false
                        email:
                          type: string
                          description: 'Must be a valid email address.'
                          example: zbailey@example.net
                          nullable: false
                        isManager:
                          type: boolean
                          description: ''
                          example: true
                          nullable: false
                        password:
                          type: string
                          description: ''
                          example: '|]|{+-'
                          nullable: false
                      required:
                        - name
                        - email
                        - isManager
                        - password
                  required:
                    - attributes
              required:
                - data
  '/api/v1/users/{id}':
    get:
      summary: 'Display a user'
      operationId: displayAUser
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    type: UrlGenerationException
                    status: 0
                    message: 'Missing required parameter for [Route: authors.show] [URI: api/v1/authors/{author}] [Missing parameter: author].'
                    source: 'Line: 35: /Users/najibu/Herd/tickets/vendor/laravel/framework/src/Illuminate/Routing/Exceptions/UrlGenerationException.php'
      tags:
        - 'Managing Users'
    delete:
      summary: 'Delete a user'
      operationId: deleteAUser
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example: {  }
                properties: {  }
      tags:
        - 'Managing Users'
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the user.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/v1/users/{user}':
    put:
      summary: 'Replace a user'
      operationId: replaceAUser
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    type: user
                    id: 16
                    attributes:
                      name: 'My User'
                      email: user@user.com
                      isManager: false
                    links:
                      self: 'http://localhost:8000/api/v1/authors/16'
                properties:
                  data:
                    type: object
                    properties:
                      type:
                        type: string
                        example: user
                      id:
                        type: integer
                        example: 16
                      attributes:
                        type: object
                        properties:
                          name:
                            type: string
                            example: 'My User'
                          email:
                            type: string
                            example: user@user.com
                          isManager:
                            type: boolean
                            example: false
                      links:
                        type: object
                        properties:
                          self:
                            type: string
                            example: 'http://localhost:8000/api/v1/authors/16'
      tags:
        - 'Managing Users'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties:
                    attributes:
                      type: object
                      description: ''
                      example: []
                      nullable: false
                      properties:
                        name:
                          type: string
                          description: ''
                          example: architecto
                          nullable: false
                        email:
                          type: string
                          description: 'Must be a valid email address.'
                          example: zbailey@example.net
                          nullable: false
                        isManager:
                          type: boolean
                          description: ''
                          example: true
                          nullable: false
                        password:
                          type: string
                          description: ''
                          example: '|]|{+-'
                          nullable: false
                      required:
                        - name
                        - email
                        - isManager
                        - password
                  required:
                    - attributes
              required:
                - data
    patch:
      summary: 'Update a user'
      operationId: updateAUser
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    type: user
                    id: 16
                    attributes:
                      name: 'My User'
                      email: user@user.com
                      isManager: false
                    links:
                      self: 'http://localhost:8000/api/v1/authors/16'
                properties:
                  data:
                    type: object
                    properties:
                      type:
                        type: string
                        example: user
                      id:
                        type: integer
                        example: 16
                      attributes:
                        type: object
                        properties:
                          name:
                            type: string
                            example: 'My User'
                          email:
                            type: string
                            example: user@user.com
                          isManager:
                            type: boolean
                            example: false
                      links:
                        type: object
                        properties:
                          self:
                            type: string
                            example: 'http://localhost:8000/api/v1/authors/16'
      tags:
        - 'Managing Users'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties:
                    attributes:
                      type: object
                      description: ''
                      example: []
                      nullable: false
                      properties:
                        name:
                          type: string
                          description: ''
                          example: architecto
                          nullable: false
                        email:
                          type: string
                          description: 'Must be a valid email address.'
                          example: zbailey@example.net
                          nullable: false
                        isManager:
                          type: boolean
                          description: ''
                          example: false
                          nullable: false
                        password:
                          type: string
                          description: ''
                          example: '|]|{+-'
                          nullable: false
    parameters:
      -
        in: path
        name: user
        description: 'The user.'
        example: 1
        required: true
        schema:
          type: integer
  /api/v1/authors:
    get:
      summary: 'Get authors.'
      operationId: getAuthors
      description: 'Retrieves all users that created a ticket.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      type: user
                      id: 1
                      attributes:
                        name: 'Tremayne Green'
                        email: althea.gaylord@example.org
                        isManager: null
                        emailVerifiedAt: '2024-07-24T15:25:30.000000Z'
                        createdAt: '2024-07-24T15:25:30.000000Z'
                        udpatedAt: '2024-07-24T15:25:30.000000Z'
                      links:
                        self: 'http://tickets.test/api/v1/authors/1'
                    -
                      type: user
                      id: 11
                      attributes:
                        name: 'Bertha Blick'
                        email: mortimer.considine@example.org
                        isManager: null
                        emailVerifiedAt: '2024-07-24T15:25:41.000000Z'
                        createdAt: '2024-07-24T15:25:42.000000Z'
                        udpatedAt: '2024-07-24T15:25:42.000000Z'
                      links:
                        self: 'http://tickets.test/api/v1/authors/11'
                    -
                      type: user
                      id: 12
                      attributes:
                        name: 'Mrs. Roslyn Stanton V'
                        email: hbeer@example.net
                        isManager: null
                        emailVerifiedAt: '2024-07-24T15:25:42.000000Z'
                        createdAt: '2024-07-24T15:25:42.000000Z'
                        udpatedAt: '2024-07-24T15:25:42.000000Z'
                      links:
                        self: 'http://tickets.test/api/v1/authors/12'
                    -
                      type: user
                      id: 13
                      attributes:
                        name: 'Ms. Shakira Murazik'
                        email: isai86@example.net
                        isManager: null
                        emailVerifiedAt: '2024-07-24T15:25:42.000000Z'
                        createdAt: '2024-07-24T15:25:42.000000Z'
                        udpatedAt: '2024-07-24T15:25:42.000000Z'
                      links:
                        self: 'http://tickets.test/api/v1/authors/13'
                    -
                      type: user
                      id: 14
                      attributes:
                        name: 'Leta Schneider DDS'
                        email: hyatt.eldridge@example.org
                        isManager: null
                        emailVerifiedAt: '2024-07-24T15:25:42.000000Z'
                        createdAt: '2024-07-24T15:25:42.000000Z'
                        udpatedAt: '2024-07-24T15:25:42.000000Z'
                      links:
                        self: 'http://tickets.test/api/v1/authors/14'
                    -
                      type: user
                      id: 15
                      attributes:
                        name: 'Erwin Haag'
                        email: kozey.abagail@example.net
                        isManager: null
                        emailVerifiedAt: '2024-07-24T15:25:42.000000Z'
                        createdAt: '2024-07-24T15:25:42.000000Z'
                        udpatedAt: '2024-07-24T15:25:42.000000Z'
                      links:
                        self: 'http://tickets.test/api/v1/authors/15'
                    -
                      type: user
                      id: 16
                      attributes:
                        name: 'Mr. Prince Lowe'
                        email: amya62@example.com
                        isManager: null
                        emailVerifiedAt: '2024-07-24T15:25:42.000000Z'
                        createdAt: '2024-07-24T15:25:42.000000Z'
                        udpatedAt: '2024-07-24T15:25:42.000000Z'
                      links:
                        self: 'http://tickets.test/api/v1/authors/16'
                    -
                      type: user
                      id: 17
                      attributes:
                        name: 'Garrett Buckridge'
                        email: demetrius56@example.com
                        isManager: null
                        emailVerifiedAt: '2024-07-24T15:25:42.000000Z'
                        createdAt: '2024-07-24T15:25:42.000000Z'
                        udpatedAt: '2024-07-24T15:25:42.000000Z'
                      links:
                        self: 'http://tickets.test/api/v1/authors/17'
                    -
                      type: user
                      id: 18
                      attributes:
                        name: 'Miss Lurline Mueller'
                        email: emclaughlin@example.com
                        isManager: null
                        emailVerifiedAt: '2024-07-24T15:25:42.000000Z'
                        createdAt: '2024-07-24T15:25:42.000000Z'
                        udpatedAt: '2024-07-24T15:25:42.000000Z'
                      links:
                        self: 'http://tickets.test/api/v1/authors/18'
                    -
                      type: user
                      id: 19
                      attributes:
                        name: 'Prof. Ruthie Buckridge III'
                        email: lillie.smitham@example.org
                        isManager: null
                        emailVerifiedAt: '2024-07-24T15:25:42.000000Z'
                        createdAt: '2024-07-24T15:25:42.000000Z'
                        udpatedAt: '2024-07-24T15:25:42.000000Z'
                      links:
                        self: 'http://tickets.test/api/v1/authors/19'
                    -
                      type: user
                      id: 20
                      attributes:
                        name: 'Prof. Marjorie Bosco III'
                        email: dernser@example.org
                        isManager: null
                        emailVerifiedAt: '2024-07-24T15:25:42.000000Z'
                        createdAt: '2024-07-24T15:25:42.000000Z'
                        udpatedAt: '2024-07-24T15:25:42.000000Z'
                      links:
                        self: 'http://tickets.test/api/v1/authors/20'
                  links:
                    first: 'http://tickets.test/api/v1/authors?page=1'
                    last: 'http://tickets.test/api/v1/authors?page=7'
                    prev: null
                    next: 'http://tickets.test/api/v1/authors?page=2'
                  meta:
                    current_page: 1
                    from: 1
                    last_page: 7
                    links:
                      -
                        url: null
                        label: '&laquo; Previous'
                        active: false
                      -
                        url: 'http://tickets.test/api/v1/authors?page=1'
                        label: '1'
                        active: true
                      -
                        url: 'http://tickets.test/api/v1/authors?page=2'
                        label: '2'
                        active: false
                      -
                        url: 'http://tickets.test/api/v1/authors?page=3'
                        label: '3'
                        active: false
                      -
                        url: 'http://tickets.test/api/v1/authors?page=4'
                        label: '4'
                        active: false
                      -
                        url: 'http://tickets.test/api/v1/authors?page=5'
                        label: '5'
                        active: false
                      -
                        url: 'http://tickets.test/api/v1/authors?page=6'
                        label: '6'
                        active: false
                      -
                        url: 'http://tickets.test/api/v1/authors?page=7'
                        label: '7'
                        active: false
                      -
                        url: 'http://tickets.test/api/v1/authors?page=2'
                        label: 'Next &raquo;'
                        active: false
                    path: 'http://tickets.test/api/v1/authors'
                    per_page: 15
                    to: 11
                    total: 102
                properties:
                  data:
                    type: array
                    example:
                      -
                        type: user
                        id: 1
                        attributes:
                          name: 'Tremayne Green'
                          email: althea.gaylord@example.org
                          isManager: null
                          emailVerifiedAt: '2024-07-24T15:25:30.000000Z'
                          createdAt: '2024-07-24T15:25:30.000000Z'
                          udpatedAt: '2024-07-24T15:25:30.000000Z'
                        links:
                          self: 'http://tickets.test/api/v1/authors/1'
                      -
                        type: user
                        id: 11
                        attributes:
                          name: 'Bertha Blick'
                          email: mortimer.considine@example.org
                          isManager: null
                          emailVerifiedAt: '2024-07-24T15:25:41.000000Z'
                          createdAt: '2024-07-24T15:25:42.000000Z'
                          udpatedAt: '2024-07-24T15:25:42.000000Z'
                        links:
                          self: 'http://tickets.test/api/v1/authors/11'
                      -
                        type: user
                        id: 12
                        attributes:
                          name: 'Mrs. Roslyn Stanton V'
                          email: hbeer@example.net
                          isManager: null
                          emailVerifiedAt: '2024-07-24T15:25:42.000000Z'
                          createdAt: '2024-07-24T15:25:42.000000Z'
                          udpatedAt: '2024-07-24T15:25:42.000000Z'
                        links:
                          self: 'http://tickets.test/api/v1/authors/12'
                      -
                        type: user
                        id: 13
                        attributes:
                          name: 'Ms. Shakira Murazik'
                          email: isai86@example.net
                          isManager: null
                          emailVerifiedAt: '2024-07-24T15:25:42.000000Z'
                          createdAt: '2024-07-24T15:25:42.000000Z'
                          udpatedAt: '2024-07-24T15:25:42.000000Z'
                        links:
                          self: 'http://tickets.test/api/v1/authors/13'
                      -
                        type: user
                        id: 14
                        attributes:
                          name: 'Leta Schneider DDS'
                          email: hyatt.eldridge@example.org
                          isManager: null
                          emailVerifiedAt: '2024-07-24T15:25:42.000000Z'
                          createdAt: '2024-07-24T15:25:42.000000Z'
                          udpatedAt: '2024-07-24T15:25:42.000000Z'
                        links:
                          self: 'http://tickets.test/api/v1/authors/14'
                      -
                        type: user
                        id: 15
                        attributes:
                          name: 'Erwin Haag'
                          email: kozey.abagail@example.net
                          isManager: null
                          emailVerifiedAt: '2024-07-24T15:25:42.000000Z'
                          createdAt: '2024-07-24T15:25:42.000000Z'
                          udpatedAt: '2024-07-24T15:25:42.000000Z'
                        links:
                          self: 'http://tickets.test/api/v1/authors/15'
                      -
                        type: user
                        id: 16
                        attributes:
                          name: 'Mr. Prince Lowe'
                          email: amya62@example.com
                          isManager: null
                          emailVerifiedAt: '2024-07-24T15:25:42.000000Z'
                          createdAt: '2024-07-24T15:25:42.000000Z'
                          udpatedAt: '2024-07-24T15:25:42.000000Z'
                        links:
                          self: 'http://tickets.test/api/v1/authors/16'
                      -
                        type: user
                        id: 17
                        attributes:
                          name: 'Garrett Buckridge'
                          email: demetrius56@example.com
                          isManager: null
                          emailVerifiedAt: '2024-07-24T15:25:42.000000Z'
                          createdAt: '2024-07-24T15:25:42.000000Z'
                          udpatedAt: '2024-07-24T15:25:42.000000Z'
                        links:
                          self: 'http://tickets.test/api/v1/authors/17'
                      -
                        type: user
                        id: 18
                        attributes:
                          name: 'Miss Lurline Mueller'
                          email: emclaughlin@example.com
                          isManager: null
                          emailVerifiedAt: '2024-07-24T15:25:42.000000Z'
                          createdAt: '2024-07-24T15:25:42.000000Z'
                          udpatedAt: '2024-07-24T15:25:42.000000Z'
                        links:
                          self: 'http://tickets.test/api/v1/authors/18'
                      -
                        type: user
                        id: 19
                        attributes:
                          name: 'Prof. Ruthie Buckridge III'
                          email: lillie.smitham@example.org
                          isManager: null
                          emailVerifiedAt: '2024-07-24T15:25:42.000000Z'
                          createdAt: '2024-07-24T15:25:42.000000Z'
                          udpatedAt: '2024-07-24T15:25:42.000000Z'
                        links:
                          self: 'http://tickets.test/api/v1/authors/19'
                      -
                        type: user
                        id: 20
                        attributes:
                          name: 'Prof. Marjorie Bosco III'
                          email: dernser@example.org
                          isManager: null
                          emailVerifiedAt: '2024-07-24T15:25:42.000000Z'
                          createdAt: '2024-07-24T15:25:42.000000Z'
                          udpatedAt: '2024-07-24T15:25:42.000000Z'
                        links:
                          self: 'http://tickets.test/api/v1/authors/20'
                    items:
                      type: object
                      properties:
                        type:
                          type: string
                          example: user
                        id:
                          type: integer
                          example: 1
                        attributes:
                          type: object
                          properties:
                            name:
                              type: string
                              example: 'Tremayne Green'
                            email:
                              type: string
                              example: althea.gaylord@example.org
                            isManager:
                              type: string
                              example: null
                            emailVerifiedAt:
                              type: string
                              example: '2024-07-24T15:25:30.000000Z'
                            createdAt:
                              type: string
                              example: '2024-07-24T15:25:30.000000Z'
                            udpatedAt:
                              type: string
                              example: '2024-07-24T15:25:30.000000Z'
                        links:
                          type: object
                          properties:
                            self:
                              type: string
                              example: 'http://tickets.test/api/v1/authors/1'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                        example: 'http://tickets.test/api/v1/authors?page=1'
                      last:
                        type: string
                        example: 'http://tickets.test/api/v1/authors?page=7'
                      prev:
                        type: string
                        example: null
                      next:
                        type: string
                        example: 'http://tickets.test/api/v1/authors?page=2'
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      from:
                        type: integer
                        example: 1
                      last_page:
                        type: integer
                        example: 7
                      links:
                        type: array
                        example:
                          -
                            url: null
                            label: '&laquo; Previous'
                            active: false
                          -
                            url: 'http://tickets.test/api/v1/authors?page=1'
                            label: '1'
                            active: true
                          -
                            url: 'http://tickets.test/api/v1/authors?page=2'
                            label: '2'
                            active: false
                          -
                            url: 'http://tickets.test/api/v1/authors?page=3'
                            label: '3'
                            active: false
                          -
                            url: 'http://tickets.test/api/v1/authors?page=4'
                            label: '4'
                            active: false
                          -
                            url: 'http://tickets.test/api/v1/authors?page=5'
                            label: '5'
                            active: false
                          -
                            url: 'http://tickets.test/api/v1/authors?page=6'
                            label: '6'
                            active: false
                          -
                            url: 'http://tickets.test/api/v1/authors?page=7'
                            label: '7'
                            active: false
                          -
                            url: 'http://tickets.test/api/v1/authors?page=2'
                            label: 'Next &raquo;'
                            active: false
                        items:
                          type: object
                          properties:
                            url:
                              type: string
                              example: null
                            label:
                              type: string
                              example: '&laquo; Previous'
                            active:
                              type: boolean
                              example: false
                      path:
                        type: string
                        example: 'http://tickets.test/api/v1/authors'
                      per_page:
                        type: integer
                        example: 15
                      to:
                        type: integer
                        example: 11
                      total:
                        type: integer
                        example: 102
      tags:
        - 'Showing Authors'
  '/api/v1/authors/{id}':
    get:
      summary: 'Get an author.'
      operationId: getAnAuthor
      description: 'Retrieves all users that created a ticket.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    type: UrlGenerationException
                    status: 0
                    message: 'Missing required parameter for [Route: authors.show] [URI: api/v1/authors/{author}] [Missing parameter: author].'
                    source: 'Line: 35: /Users/najibu/Herd/tickets/vendor/laravel/framework/src/Illuminate/Routing/Exceptions/UrlGenerationException.php'
      tags:
        - 'Showing Authors'
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the author.'
        example: 1
        required: true
        schema:
          type: integer
