name: 'Managing Tickets'
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/tickets
    metadata:
      groupName: 'Managing Tickets'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get all tickets'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      sort:
        name: sort
        description: 'Data field(s) to sort by. Separate multiple fields with commas. Denote descending sort with a minus sign.'
        required: false
        example: 'sort=title,-createdAt'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      'filter[status]':
        name: 'filter[status]'
        description: 'Filter by status code: A, C, H, X.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'filter[title]':
        name: 'filter[title]'
        description: 'Filter by title. Wildcards are supported.'
        required: false
        example: '*fix*'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanQueryParameters:
      sort: 'sort=title,-createdAt'
      'filter[title]': '*fix*'
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"type":"ticket","id":103,"attributes":{"title":"fourth Ticket","status":"closed","createdAt":"2024-12-14T18:00:29.000000Z","updatedAt":"2024-12-14T18:00:29.000000Z"},"relationships":{"author":{"data":{"type":"user","id":1},"links":[{"self":"http:\/\/tickets.test\/api\/v1\/authors\/1"}]}},"links":{"self":"http:\/\/tickets.test\/api\/v1\/tickets\/103"}},{"type":"ticket","id":102,"attributes":{"title":"First Ticket","status":"closed","createdAt":"2024-12-14T17:57:37.000000Z","updatedAt":"2024-12-14T17:57:37.000000Z"},"relationships":{"author":{"data":{"type":"user","id":1},"links":[{"self":"http:\/\/tickets.test\/api\/v1\/authors\/1"}]}},"links":{"self":"http:\/\/tickets.test\/api\/v1\/tickets\/102"}},{"type":"ticket","id":101,"attributes":{"title":"First Ticket","status":"open","createdAt":"2024-12-14T17:47:55.000000Z","updatedAt":"2024-12-14T17:47:55.000000Z"},"relationships":{"author":{"data":{"type":"user","id":1},"links":[{"self":"http:\/\/tickets.test\/api\/v1\/authors\/1"}]}},"links":{"self":"http:\/\/tickets.test\/api\/v1\/tickets\/101"}},{"type":"ticket","id":1,"attributes":{"title":"Doloribus officiis et facere.","status":"closed","createdAt":"2024-07-24T15:25:42.000000Z","updatedAt":"2024-07-24T15:25:42.000000Z"},"relationships":{"author":{"data":{"type":"user","id":11},"links":[{"self":"http:\/\/tickets.test\/api\/v1\/authors\/11"}]}},"links":{"self":"http:\/\/tickets.test\/api\/v1\/tickets\/1"}},{"type":"ticket","id":2,"attributes":{"title":"Eum laborum totam eius officiis qui.","status":"closed","createdAt":"2024-07-24T15:25:42.000000Z","updatedAt":"2024-07-24T15:25:42.000000Z"},"relationships":{"author":{"data":{"type":"user","id":19},"links":[{"self":"http:\/\/tickets.test\/api\/v1\/authors\/19"}]}},"links":{"self":"http:\/\/tickets.test\/api\/v1\/tickets\/2"}},{"type":"ticket","id":3,"attributes":{"title":"Blanditiis laborum quis dolores veritatis iure atque voluptatem.","status":"open","createdAt":"2024-07-24T15:25:42.000000Z","updatedAt":"2024-07-24T15:25:42.000000Z"},"relationships":{"author":{"data":{"type":"user","id":13},"links":[{"self":"http:\/\/tickets.test\/api\/v1\/authors\/13"}]}},"links":{"self":"http:\/\/tickets.test\/api\/v1\/tickets\/3"}},{"type":"ticket","id":4,"attributes":{"title":"Voluptas alias voluptates sit porro.","status":"closed","createdAt":"2024-07-24T15:25:42.000000Z","updatedAt":"2024-07-24T15:25:42.000000Z"},"relationships":{"author":{"data":{"type":"user","id":13},"links":[{"self":"http:\/\/tickets.test\/api\/v1\/authors\/13"}]}},"links":{"self":"http:\/\/tickets.test\/api\/v1\/tickets\/4"}},{"type":"ticket","id":5,"attributes":{"title":"Cum non similique vitae omnis.","status":"open","createdAt":"2024-07-24T15:25:42.000000Z","updatedAt":"2024-07-24T15:25:42.000000Z"},"relationships":{"author":{"data":{"type":"user","id":17},"links":[{"self":"http:\/\/tickets.test\/api\/v1\/authors\/17"}]}},"links":{"self":"http:\/\/tickets.test\/api\/v1\/tickets\/5"}},{"type":"ticket","id":6,"attributes":{"title":"Eveniet suscipit molestias consequatur et quae.","status":"open","createdAt":"2024-07-24T15:25:42.000000Z","updatedAt":"2024-07-24T15:25:42.000000Z"},"relationships":{"author":{"data":{"type":"user","id":11},"links":[{"self":"http:\/\/tickets.test\/api\/v1\/authors\/11"}]}},"links":{"self":"http:\/\/tickets.test\/api\/v1\/tickets\/6"}},{"type":"ticket","id":7,"attributes":{"title":"Sint sed recusandae accusantium dolores.","status":"open","createdAt":"2024-07-24T15:25:42.000000Z","updatedAt":"2024-07-24T15:25:42.000000Z"},"relationships":{"author":{"data":{"type":"user","id":15},"links":[{"self":"http:\/\/tickets.test\/api\/v1\/authors\/15"}]}},"links":{"self":"http:\/\/tickets.test\/api\/v1\/tickets\/7"}},{"type":"ticket","id":8,"attributes":{"title":"Eius suscipit aspernatur voluptatibus id.","status":"pending","createdAt":"2024-07-24T15:25:42.000000Z","updatedAt":"2024-07-24T15:25:42.000000Z"},"relationships":{"author":{"data":{"type":"user","id":16},"links":[{"self":"http:\/\/tickets.test\/api\/v1\/authors\/16"}]}},"links":{"self":"http:\/\/tickets.test\/api\/v1\/tickets\/8"}},{"type":"ticket","id":9,"attributes":{"title":"Delectus ut expedita harum voluptas voluptatem iste.","status":"pending","createdAt":"2024-07-24T15:25:42.000000Z","updatedAt":"2024-07-24T15:25:42.000000Z"},"relationships":{"author":{"data":{"type":"user","id":14},"links":[{"self":"http:\/\/tickets.test\/api\/v1\/authors\/14"}]}},"links":{"self":"http:\/\/tickets.test\/api\/v1\/tickets\/9"}},{"type":"ticket","id":10,"attributes":{"title":"Et unde aperiam nisi ut consequatur.","status":"closed","createdAt":"2024-07-24T15:25:42.000000Z","updatedAt":"2024-07-24T15:25:42.000000Z"},"relationships":{"author":{"data":{"type":"user","id":11},"links":[{"self":"http:\/\/tickets.test\/api\/v1\/authors\/11"}]}},"links":{"self":"http:\/\/tickets.test\/api\/v1\/tickets\/10"}},{"type":"ticket","id":11,"attributes":{"title":"Assumenda sint aliquam veniam aperiam ipsum consectetur.","status":"closed","createdAt":"2024-07-24T15:25:42.000000Z","updatedAt":"2024-07-24T15:25:42.000000Z"},"relationships":{"author":{"data":{"type":"user","id":14},"links":[{"self":"http:\/\/tickets.test\/api\/v1\/authors\/14"}]}},"links":{"self":"http:\/\/tickets.test\/api\/v1\/tickets\/11"}},{"type":"ticket","id":12,"attributes":{"title":"Et earum illum debitis quisquam id.","status":"open","createdAt":"2024-07-24T15:25:42.000000Z","updatedAt":"2024-07-24T15:25:42.000000Z"},"relationships":{"author":{"data":{"type":"user","id":12},"links":[{"self":"http:\/\/tickets.test\/api\/v1\/authors\/12"}]}},"links":{"self":"http:\/\/tickets.test\/api\/v1\/tickets\/12"}}],"links":{"first":"http:\/\/tickets.test\/api\/v1\/tickets?page=1","last":"http:\/\/tickets.test\/api\/v1\/tickets?page=7","prev":null,"next":"http:\/\/tickets.test\/api\/v1\/tickets?page=2"},"meta":{"current_page":1,"from":1,"last_page":7,"links":[{"url":null,"label":"&laquo; Previous","active":false},{"url":"http:\/\/tickets.test\/api\/v1\/tickets?page=1","label":"1","active":true},{"url":"http:\/\/tickets.test\/api\/v1\/tickets?page=2","label":"2","active":false},{"url":"http:\/\/tickets.test\/api\/v1\/tickets?page=3","label":"3","active":false},{"url":"http:\/\/tickets.test\/api\/v1\/tickets?page=4","label":"4","active":false},{"url":"http:\/\/tickets.test\/api\/v1\/tickets?page=5","label":"5","active":false},{"url":"http:\/\/tickets.test\/api\/v1\/tickets?page=6","label":"6","active":false},{"url":"http:\/\/tickets.test\/api\/v1\/tickets?page=7","label":"7","active":false},{"url":"http:\/\/tickets.test\/api\/v1\/tickets?page=2","label":"Next &raquo;","active":false}],"path":"http:\/\/tickets.test\/api\/v1\/tickets","per_page":15,"to":15,"total":102}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 4|6XptVi8BRE4X7VsPwzDnLGJNCU2icUgM8blXzyJO8daa2173'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/tickets
    metadata:
      groupName: 'Managing Tickets'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Create a ticket'
      description: 'Creates a new ticket record. Users can only create tickets for themselves. Managers can create tickets for any user.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      data:
        name: data
        description: ''
        required: true
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.attributes:
        name: data.attributes
        description: ''
        required: true
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.attributes.title:
        name: data.attributes.title
        description: "The ticket's title (method)."
        required: true
        example: No-example
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.attributes.description:
        name: data.attributes.description
        description: "The ticket's description."
        required: true
        example: No-example
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.attributes.status:
        name: data.attributes.status
        description: "The ticket's status."
        required: true
        example: No-example
        type: string
        enumValues:
          - A
          - C
          - H
          - X
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.relationships:
        name: data.relationships
        description: ''
        required: true
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.relationships.author:
        name: data.relationships.author
        description: ''
        required: true
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.relationships.author.data:
        name: data.relationships.author.data
        description: ''
        required: true
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.relationships.author.data.id:
        name: data.relationships.author.data.id
        description: 'The author assigned to the ticket. The <code>id</code> of an existing record in the users table.'
        required: true
        example: 0
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      data:
        attributes:
          title: No-example
          description: No-example
          status: No-example
        relationships:
          author:
            data:
              id: 0
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"type":"ticket","id":107,"attributes":{"title":"asdfasdfasdfasdfasdfsadf","description":"test ticket","status":"A","createdAt":"2024-03-26T04:40:48.000000Z","updatedAt":"2024-03-26T04:40:48.000000Z"},"relationships":{"author":{"data":{"type":"user","id":1},"links":{"self":"http:\/\/localhost:8000\/api\/v1\/authors\/1"}}},"links":{"self":"http:\/\/localhost:8000\/api\/v1\/tickets\/107"}}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 4|6XptVi8BRE4X7VsPwzDnLGJNCU2icUgM8blXzyJO8daa2173'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/tickets/{id}'
    metadata:
      groupName: 'Managing Tickets'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Show a specific ticket.'
      description: 'Display an individual ticket.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the ticket.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '[{"type":"UrlGenerationException","status":0,"message":"Missing required parameter for [Route: authors.show] [URI: api\/v1\/authors\/{author}] [Missing parameter: author].","source":"Line: 35: \/Users\/najibu\/Herd\/tickets\/vendor\/laravel\/framework\/src\/Illuminate\/Routing\/Exceptions\/UrlGenerationException.php"}]'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 4|6XptVi8BRE4X7VsPwzDnLGJNCU2icUgM8blXzyJO8daa2173'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/tickets/{id}'
    metadata:
      groupName: 'Managing Tickets'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete ticket.'
      description: 'Remove the specified resource from storage.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the ticket.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 4|6XptVi8BRE4X7VsPwzDnLGJNCU2icUgM8blXzyJO8daa2173'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/v1/tickets/{ticket_id}'
    metadata:
      groupName: 'Managing Tickets'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Replace Ticket'
      description: 'Replace the specified ticket in storage.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      ticket_id:
        name: ticket_id
        description: 'The ID of the ticket.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      ticket_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      data:
        name: data
        description: ''
        required: true
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.attributes:
        name: data.attributes
        description: ''
        required: true
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.attributes.title:
        name: data.attributes.title
        description: ''
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.attributes.description:
        name: data.attributes.description
        description: ''
        required: true
        example: 'Eius et animi quos velit et.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.attributes.status:
        name: data.attributes.status
        description: ''
        required: true
        example: closed
        type: string
        enumValues:
          - open
          - closed
          - pending
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.relationships:
        name: data.relationships
        description: ''
        required: true
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.relationships.author:
        name: data.relationships.author
        description: ''
        required: true
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.relationships.author.data:
        name: data.relationships.author.data
        description: ''
        required: true
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.relationships.author.data.id:
        name: data.relationships.author.data.id
        description: ''
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      data:
        attributes:
          title: architecto
          description: 'Eius et animi quos velit et.'
          status: closed
        relationships:
          author:
            data:
              id: 16
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 4|6XptVi8BRE4X7VsPwzDnLGJNCU2icUgM8blXzyJO8daa2173'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: 'api/v1/tickets/{ticket_id}'
    metadata:
      groupName: 'Managing Tickets'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update Ticket'
      description: 'Update the specified ticket in storage.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      ticket_id:
        name: ticket_id
        description: 'The ID of the ticket.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      ticket_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      data.attributes:
        name: data.attributes
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data:
        name: data
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.attributes.title:
        name: data.attributes.title
        description: ''
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.attributes.description:
        name: data.attributes.description
        description: ''
        required: false
        example: 'Eius et animi quos velit et.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.attributes.status:
        name: data.attributes.status
        description: ''
        required: false
        example: pending
        type: string
        enumValues:
          - open
          - closed
          - pending
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.relationships.author.data:
        name: data.relationships.author.data
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.relationships.author:
        name: data.relationships.author
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.relationships:
        name: data.relationships
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.relationships.author.data.id:
        name: data.relationships.author.data.id
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      data:
        attributes:
          title: architecto
          description: 'Eius et animi quos velit et.'
          status: pending
        relationships:
          author:
            data: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 4|6XptVi8BRE4X7VsPwzDnLGJNCU2icUgM8blXzyJO8daa2173'
    controller: null
    method: null
    route: null
    custom: []
